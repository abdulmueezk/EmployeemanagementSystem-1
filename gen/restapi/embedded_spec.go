// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This Microservice used to add the official information in the Employee Account",
    "title": "Employee Managemnt System",
    "contact": {
      "email": "abdulmueez@wanclouds.net"
    },
    "version": "1.0.0"
  },
  "host": "ems.swagger.io",
  "basePath": "/v1",
  "paths": {
    "/Admin/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Add Official Information to the employee account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/employeeofficial"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successfully Add"
          }
        }
      }
    },
    "/Admin/delete/{cnic}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Update Official Information to the employee account",
        "parameters": [
          {
            "type": "string",
            "description": "Employee Cnic to delete",
            "name": "cnic",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteemployeeofficial"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successfully Update"
          }
        }
      }
    },
    "/Admin/getrecoard/{cnic}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Show Employee recoard",
        "operationId": "getemployee recoard",
        "parameters": [
          {
            "type": "string",
            "description": "Enter CNIC to Show the Recoard",
            "name": "cnic",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/employeeofficial"
            }
          },
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "email not found"
          }
        }
      }
    },
    "/Admin/update/{cnic}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Update Official Information to the employee account",
        "parameters": [
          {
            "type": "string",
            "description": "Employee Cnic to update",
            "name": "cnic",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateemployeeofficial"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successfully Update"
          }
        }
      }
    },
    "/Employee/getrecoard/{cnic}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Employee"
        ],
        "summary": "Show Employee recoard",
        "parameters": [
          {
            "type": "string",
            "description": "Enter CNIC to Show the Recoard",
            "name": "cnic",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/employeeofficial"
            }
          },
          "400": {
            "description": "Invalid CNIC"
          }
        }
      }
    },
    "/TeamLead/getrecoard/{cnic}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "TeamLead"
        ],
        "summary": "Show Employee recoard",
        "parameters": [
          {
            "type": "string",
            "description": "Enter CNIC to Show the Recoard",
            "name": "cnic",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/employeeofficial"
            }
          },
          "400": {
            "description": "Invalid CNIC"
          }
        }
      }
    },
    "/TeamLead/getteamrecoard/{cnic}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "TeamLead"
        ],
        "summary": "Show Employee recoard",
        "parameters": [
          {
            "type": "string",
            "description": "Enter CNIC to Show the Recoard",
            "name": "cnic",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/teamleademployeeofficial"
            }
          },
          "400": {
            "description": "Invalid CNIC"
          }
        }
      }
    }
  },
  "definitions": {
    "deleteemployeeofficial": {
      "type": "object",
      "required": [
        "jobtype"
      ],
      "properties": {
        "jobtype": {
          "type": "string",
          "example": "Intern,Permanent,Resign,Terminate"
        }
      }
    },
    "employeeofficial": {
      "type": "object",
      "required": [
        "cnic",
        "salary",
        "designation",
        "department",
        "teamlead",
        "jobtype",
        "healthinsurance",
        "lifeinsurance"
      ],
      "properties": {
        "cnic": {
          "type": "string",
          "example": "31202"
        },
        "department": {
          "type": "string",
          "example": "GoLang"
        },
        "designation": {
          "type": "string",
          "example": "BackEnd Developer"
        },
        "healthinsurance": {
          "type": "string",
          "example": "Nil"
        },
        "jobtype": {
          "type": "string",
          "example": "Intern"
        },
        "lifeinsurance": {
          "type": "string",
          "example": "Nil"
        },
        "salary": {
          "type": "string",
          "example": "20000"
        },
        "teamlead": {
          "type": "string",
          "example": "Kashif Ali"
        }
      }
    },
    "teamleademployeeofficial": {
      "type": "object",
      "required": [
        "designation",
        "department",
        "teamlead",
        "jobtype"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "Golang"
        },
        "designation": {
          "type": "string",
          "example": "Backend Developer"
        },
        "jobtype": {
          "type": "string",
          "example": "Interum"
        },
        "teamlead": {
          "type": "string",
          "example": "Kashif Ali"
        }
      }
    },
    "updateemployeeofficial": {
      "type": "object",
      "required": [
        "salary",
        "designation",
        "department",
        "teamlead",
        "jobtype",
        "healthinsurance",
        "lifeinsurance"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "GoLang"
        },
        "designation": {
          "type": "string",
          "example": "BackEnd Developer"
        },
        "healthinsurance": {
          "type": "string",
          "example": "Nil"
        },
        "jobtype": {
          "type": "string",
          "example": "Intern"
        },
        "lifeinsurance": {
          "type": "string",
          "example": "Nil"
        },
        "salary": {
          "type": "string",
          "example": "20000"
        },
        "teamlead": {
          "type": "string",
          "example": "Kashif Ali"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Admin"
    },
    {
      "name": "Employee"
    },
    {
      "name": "TeamLead"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This Microservice used to add the official information in the Employee Account",
    "title": "Employee Managemnt System",
    "contact": {
      "email": "abdulmueez@wanclouds.net"
    },
    "version": "1.0.0"
  },
  "host": "ems.swagger.io",
  "basePath": "/v1",
  "paths": {
    "/Admin/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Add Official Information to the employee account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/employeeofficial"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successfully Add"
          }
        }
      }
    },
    "/Admin/delete/{cnic}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Update Official Information to the employee account",
        "parameters": [
          {
            "type": "string",
            "description": "Employee Cnic to delete",
            "name": "cnic",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteemployeeofficial"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successfully Update"
          }
        }
      }
    },
    "/Admin/getrecoard/{cnic}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Show Employee recoard",
        "operationId": "getemployee recoard",
        "parameters": [
          {
            "type": "string",
            "description": "Enter CNIC to Show the Recoard",
            "name": "cnic",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/employeeofficial"
            }
          },
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "email not found"
          }
        }
      }
    },
    "/Admin/update/{cnic}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Update Official Information to the employee account",
        "parameters": [
          {
            "type": "string",
            "description": "Employee Cnic to update",
            "name": "cnic",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateemployeeofficial"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successfully Update"
          }
        }
      }
    },
    "/Employee/getrecoard/{cnic}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Employee"
        ],
        "summary": "Show Employee recoard",
        "parameters": [
          {
            "type": "string",
            "description": "Enter CNIC to Show the Recoard",
            "name": "cnic",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/employeeofficial"
            }
          },
          "400": {
            "description": "Invalid CNIC"
          }
        }
      }
    },
    "/TeamLead/getrecoard/{cnic}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "TeamLead"
        ],
        "summary": "Show Employee recoard",
        "parameters": [
          {
            "type": "string",
            "description": "Enter CNIC to Show the Recoard",
            "name": "cnic",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/employeeofficial"
            }
          },
          "400": {
            "description": "Invalid CNIC"
          }
        }
      }
    },
    "/TeamLead/getteamrecoard/{cnic}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "TeamLead"
        ],
        "summary": "Show Employee recoard",
        "parameters": [
          {
            "type": "string",
            "description": "Enter CNIC to Show the Recoard",
            "name": "cnic",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/teamleademployeeofficial"
            }
          },
          "400": {
            "description": "Invalid CNIC"
          }
        }
      }
    }
  },
  "definitions": {
    "deleteemployeeofficial": {
      "type": "object",
      "required": [
        "jobtype"
      ],
      "properties": {
        "jobtype": {
          "type": "string",
          "example": "Intern,Permanent,Resign,Terminate"
        }
      }
    },
    "employeeofficial": {
      "type": "object",
      "required": [
        "cnic",
        "salary",
        "designation",
        "department",
        "teamlead",
        "jobtype",
        "healthinsurance",
        "lifeinsurance"
      ],
      "properties": {
        "cnic": {
          "type": "string",
          "example": "31202"
        },
        "department": {
          "type": "string",
          "example": "GoLang"
        },
        "designation": {
          "type": "string",
          "example": "BackEnd Developer"
        },
        "healthinsurance": {
          "type": "string",
          "example": "Nil"
        },
        "jobtype": {
          "type": "string",
          "example": "Intern"
        },
        "lifeinsurance": {
          "type": "string",
          "example": "Nil"
        },
        "salary": {
          "type": "string",
          "example": "20000"
        },
        "teamlead": {
          "type": "string",
          "example": "Kashif Ali"
        }
      }
    },
    "teamleademployeeofficial": {
      "type": "object",
      "required": [
        "designation",
        "department",
        "teamlead",
        "jobtype"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "Golang"
        },
        "designation": {
          "type": "string",
          "example": "Backend Developer"
        },
        "jobtype": {
          "type": "string",
          "example": "Interum"
        },
        "teamlead": {
          "type": "string",
          "example": "Kashif Ali"
        }
      }
    },
    "updateemployeeofficial": {
      "type": "object",
      "required": [
        "salary",
        "designation",
        "department",
        "teamlead",
        "jobtype",
        "healthinsurance",
        "lifeinsurance"
      ],
      "properties": {
        "department": {
          "type": "string",
          "example": "GoLang"
        },
        "designation": {
          "type": "string",
          "example": "BackEnd Developer"
        },
        "healthinsurance": {
          "type": "string",
          "example": "Nil"
        },
        "jobtype": {
          "type": "string",
          "example": "Intern"
        },
        "lifeinsurance": {
          "type": "string",
          "example": "Nil"
        },
        "salary": {
          "type": "string",
          "example": "20000"
        },
        "teamlead": {
          "type": "string",
          "example": "Kashif Ali"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Admin"
    },
    {
      "name": "Employee"
    },
    {
      "name": "TeamLead"
    }
  ]
}`))
}
